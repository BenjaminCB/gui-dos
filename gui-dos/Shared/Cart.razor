@inject ShoppingCart ShoppingCart
@inject NavigationManager NavMan

@if (ShoppingCart.GiftBaskets.Count == 0)
{
    <strong>
        Your cart is empty
    </strong>
}
else
{
    @foreach (GiftBasket gb in ShoppingCart.GiftBaskets)
    {
        <div>
            <CartBasket GiftBasket="@gb" />
            <button @onclick="() => remove(gb)">
                Remove
            </button>
        </div>
    }
}

<div>
    <strong>
        Total: @total
    </strong>
</div>

<button @onclick=@goToOrder>
    Order
</button>

@code
{
    private double total;

    private void goToOrder()
    {
        NavMan.NavigateTo("/order-fill");
    }

    private void remove(GiftBasket gb)
    {
        total -= gb.Price;
        ShoppingCart.GiftBaskets.Remove(gb);
    }

    public void Refresh()
    {
        StateHasChanged();
        updateTotal();
    }

    private void updateTotal()
    {
        total = ShoppingCart.GiftBaskets.Aggregate(0d, (acc, gb) => acc + gb.Price);
    }

    protected override void OnInitialized()
    {
        updateTotal();
    }
}
