@page "/gavekurv"

@using gui_dos.Data
@using System.Collections.Generic


<body>
    <section id="product-page-wrapper">

        <section id="filter-row">
            <div class="col-xl-6">
                <a>Pris</a>
                <RadzenSlider Range="true" @bind-Value=@values TValue="IEnumerable<int>" Change=@(args => OnChange(args, "Range Slider")) />
                <br /> <a>Her er de valgte vaerdier</a>
                <p> @JoinVal </p>
                <br />
            </div>
        </section>

        <div class="card-columns">
            @foreach (var product in Products)
            {
                <div class="card">
                    <div class="card-img" style="background-image: url('https://i.insider.com/59ca65fefca6e427008b4776?width=700')">
                        <div class="card-body">
                            <h5 class="card-title">@product.Title</h5>
                        </div>
                    </div>
                </div>
            }
        </div>

    </section>

</body>

@code {
                // https://blazor.radzen.com/slider
                static int start = 14;
                static int end = 78;
                IEnumerable<int> values = new int[] { start, end };
                IEnumerable<int> negativeValues = new int[] { -100, 100 };
                //int value = 67;
                //int negativeValue = 0;
                //int valueWithStep = 30;
                string[] Val;
                string JoinVal = $"Pris mellem {start},- og {end},-";

                void OnChange(dynamic value, string name)
                {
                    var str = value is IEnumerable<int> ? string.Join(", ", value) : value;
                    Val = str.Split(",");
                    JoinVal = $"Pris mellem {Val[0]},- og {Val[1]},-";
                }

    public class Product
            {
                public int ProductId { get; set; }
                public int Price { get; set; }
                public string Title { get; set; }
                public string Description { get; set; }
                public string Image { get; set; }

                public Product(int id, int price, string Title, string D, string I) {
                    this.ProductId = id;
                    this.Title = Title;
                    this.Description = D;
                    this.Image = I;
                }

                public Product()
                {
                }
            }
            public class Content
            {
                public string content = "";
            }

            static Product a = new Product { ProductId = 1, Price = 1, Title = "a", Description = "b", Image = "c" };
            static Product b = new Product (1, 20, "a", "b", "c");
            static Product c = new Product (1, 300, "a", "b", "c");

            public static List<Product> Products = new List<Product>{a, b, c };
            public static List<Content> Conten = new List<Content> {};

            
}