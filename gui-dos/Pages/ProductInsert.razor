@page "/product/insert"

@using System
@using System.IO
@using System.Collections.Generic
@using gui_dos.Models
@using gui_dos.Forms
@using gui_dos.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms

@inject IDbContextFactory<IsvaerftetDbContext> DbContextFactory
@inject NavigationManager NavMan

<body>
    <h1>Lav nyt product</h1>

    <div class="new-product">
        <EditForm Model="@productForm" OnValidSubmit="@InsertProduct">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group product-title">
                <label for="Title" class="title">Titel:</label>
                <InputText @bind-Value=productForm.Title placeholder="Tilføj titel her"/>
            </div>
            <div class="form-group product-description">
                <label for="Description" class="title">Beskrivelse:</label>
                <div class="description-box">
                    <InputTextArea @bind-Value=productForm.Description placeholder="Tilføj beskrivelse her" rows="3"/>
                </div>
            </div>
            <div class="form-group product-price">
                <label for="Price" class="title">Pris:</label>
                <InputNumber @bind-Value=productForm.Price />
            </div>
            <div class="form-group product-image">
                <label for="Image" class="title">Billede(r):</label>
                <InputFile OnChange="@fileUpload" />
            </div>
            <button type="submit">Submit</button>
        </EditForm>
    </div>

</body>

@code {
    private long maxImageFileSize = 4096000;
    private ProductForm productForm = new ProductForm();

    private async Task fileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream(maxImageFileSize).ReadAsync(buffer);
        productForm.Image = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task InsertProduct()
    {
        using (var ctx = DbContextFactory.CreateDbContext())
        {
            ctx.Products.Add(new Product( productForm.Title
                                        , productForm.Description
                                        , productForm.Price
                                        , productForm.Image ));
            await ctx.SaveChangesAsync();
        }
        NavMan.NavigateTo("/product/show");
    }
}
