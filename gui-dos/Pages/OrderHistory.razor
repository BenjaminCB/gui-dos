@page "/orderhistory"

@using System.Collections.Generic
@using gui_dos.Data
@using Microsoft.EntityFrameworkCore;

@inject IDbContextFactory<IsvaerftetDbContext> DbContextFactory
@inject NavigationManager NavMan

<h1>Ordrer Historik</h1>

@if (oldOrders == null)
{
    <div>
        Loading...
    </div>
}


@if (oldOrders != null && oldOrders.Count == 0)
{
    <div>
        No orders found...
    </div>
}

@if (oldOrders != null)
{
    <MudTable Items="@oldOrders" Hover="true" Breakpoint="Breakpoint.Sm" Dense="true">
        <ColGroup>
            <col style="width:20%" />
            <col style="width:20%;" />
            <col style="width:20%;" />
            <col style="width:20%;" />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh>Oprettet</MudTh>
            <MudTh>Afsluttet</MudTh>
            <MudTh>Navn</MudTh>
            <MudTh>Pris</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.OrderId))">
                    @((context.ShowDetails == true)? "Skjul" : "Vis") mere info
                </MudButton>
            </MudTd>
            <MudTd DataLabel="Oprettet">@context.DateOrdered</MudTd>
            <MudTd DataLabel="Afsluttet">@context.DateDeadline</MudTd>
            <MudTd DataLabel="Navn">@context.FirstName</MudTd>
            <MudTd DataLabel="Pris">@context.Price</MudTd>
            <!-- https://mudblazor.com/components/table#table-with-related-data Vil lave dether, da ChildRowContent kan være hvadsomhelst, Tænker man kan lave flere af dem-->
        </RowTemplate>
        <ChildRowContent>
            @if (context.ShowDetails)
            {
                <MudTr>
                    <td colspan="4">
                        <MudCard Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.body1">Information om Order: <strong>@context.OrderId</strong> <br /></MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent Class="pa-0">
                                <MudTable Items="@oldOrders" Context="Child" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0" Dense="true">
                                    <ColGroup>
                                        <col style="width:25%;"/>
                                        <col style="width:15%;" />
                                        <col style="width:15%;" />
                                    </ColGroup>
                                    <HeaderContent>
                                        <MudTh>Email</MudTh>
                                        <MudTh>Telnr</MudTh>
                                        <MudTh>Kommentar</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        @if (context.OrderId == Child.OrderId)
                                            {
                                            <MudTd DataLabel="Email">@Child.Email</MudTd>
                                            <MudTd DataLabel="Telnr">@Child.PhoneNumber</MudTd>
                                            <MudTd DataLabel="Kommentar">@Child.Comment</MudTd>
                                            }
                                    </RowTemplate>
                                </MudTable>
                                <br />
                                <MudTable Items="@oldOrders" Context="content" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0" Dense="true">
                                    <ColGroup>
                                        <col style="width:10%;"/>
                                        <col style="width:10%;"/>
                                        <col style="width:30%;" />
                                    </ColGroup>
                                    <HeaderContent>
                                        <MudTh>ID</MudTh>
                                        <MudTh>Pris</MudTh>
                                        <MudTh>Kommentar</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                       @if (context.OrderId == content.OrderId)
                                       {
                                           for (int i = 0; i < content.GiftBaskets.Count; i++)
                                           {
                                            <MudTd DataLabel="Email">@content.GiftBaskets[i].GiftBasketId</MudTd>
                                            <MudTd DataLabel="Telnr">@content.GiftBaskets[i].Price</MudTd>
                                            <MudTd DataLabel="Kommentar">@content.GiftBaskets[i].Comment</MudTd>
                                           }
                                        }
                                    </RowTemplate>
                                </MudTable>
                            </MudCardContent>
                        </MudCard>
                    </td>
                </MudTr>
            }
            <br />
            </ChildRowContent>
    </MudTable>
    }
}


@code
{
    private List<Order> oldOrders;

    protected override async Task OnInitializedAsync()
    {
        using (var ctx = DbContextFactory.CreateDbContext())
        {
            oldOrders = await ctx.Orders.OrderBy(t => t.DateOrdered).ToListAsync();
            // ctx.Orders.Where(t => t.Status == OrderStatus.Delivered).OrderBy(t=>t.DateOrdered).ToListAsync();
        }
    }
    
    private void ShowBtnPress(int nr)
    {
        Order tmpPerson = oldOrders.First(f => f.OrderId == nr);
        tmpPerson.ShowDetails = !tmpPerson.ShowDetails;
    }
    
}
