@page "/orderhistory"

@using System.Collections.Generic
@using gui_dos.Data
@using Microsoft.EntityFrameworkCore;

@inject IDbContextFactory<IsvaerftetDbContext> DbContextFactory
@inject NavigationManager NavMan


<AuthorizeView Context="AuthContext">
    <Authorized>
        @if (oldOrders == null)
        {
            <div>
                Loading...
            </div>}

        @if (oldOrders != null && oldOrders.Count == 0)
        {
            <div>
                No orders found...
            </div>}

        @if (oldOrders != null)
        {
    <MudTable Items="@oldOrders" Hover="true" Breakpoint="Breakpoint.Sm" Dense="true" Filter="new Func<Order,bool>(FilterFunc1)" SortLabel="Sort By">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Arkiverede Ordrer</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <!-- Coulums and their given size. 'Empty' = fill out what is needed or left -->
        <ColGroup>
            <col style="width:20%" />
            <col style="width:20%;" />
            <col style="width:20%;" />
            <col style="width:20%;" />
            <col />
        </ColGroup>
        <!-- Functionality to be able to sort based on the rows values, '1-9-a-z' for text -->
        <!-- Layout defult sorted by DateOrdered -->
        <HeaderContent>
            <MudTh>Info</MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Order, object>(x=>x.DateOrdered)">Oprettet</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Order, object>(x=>x.DateDeadline)">Leverings-Dato</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Order, object>(x=>x.FirstName)">Navn</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Order, object>(x=>x.Price)">Pris</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Info" Color="Color.Transparent" Size="Size.Small" OnClick="@(() => ShowBtnPress(context.OrderId))">
                    @((context.ShowDetails == true)? "Skjul" : "Vis") mere info
                </MudButton>
            </MudTd>
            <MudTd DataLabel="Oprettet">@context.DateOrdered</MudTd>
            <MudTd DataLabel="Afsluttet">@context.DateDeadline</MudTd>
            <MudTd DataLabel="Navn">@context.FirstName @context.LastName</MudTd>
            <MudTd DataLabel="Pris">@context.Price</MudTd>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>
                Intet match var fundet <br />
                Det er muligt at søge efter: Fornavn, Efternavn, OrdrerID, Telefon nr. og Pris<br />
                <p class="text-muted">Disse kan/må ikke kombineres</p>
            </MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
        <ChildRowContent>
            @if (context.ShowDetails)
                {
                <MudTr>
                    <td colspan="4">
                        <MudCard Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.body1">Information om Order: <strong>@context.OrderId</strong> <br /></MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                            <MudCardContent Class="pa-0">
                                <MudTable Items="@oldOrders" Context="child" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0" Dense="true">
                                    <ColGroup>
                                        <col style="width:25%;" />
                                        <col style="width:15%;" />
                                        <col />
                                    </ColGroup>
                                    <HeaderContent>
                                        <MudTh>Email</MudTh>
                                        <MudTh>Tel nr.</MudTh>
                                        <MudTh>Kommentar</MudTh>
                                        <MudTh>Forløb</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        @if (context.OrderId == child.OrderId)
                                            {
                                            <MudTd DataLabel="Email">@child.Email</MudTd>
                                            <MudTd DataLabel="Tel nr.">@child.PhoneNumber</MudTd>
                                            <MudTd DataLabel="Kommentar">@child.Comment</MudTd>
                                            @foreach (var item in child.Changelog)
                                                {
                                                <MudTd DataLabel="Forløb">ChangeID @item.ChangeId: @item.ToString()</MudTd>
                                                }
                                            }
                                    </RowTemplate>
                                </MudTable>
                                <br />
                                <MudTable Items="@oldOrders" Context="content" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0" Dense="true">
                                    <ColGroup>
                                        <col style="width:10%;" />
                                        <col style="width:10%;" />
                                        <col style="width:30%;" />
                                    </ColGroup>
                                    <HeaderContent>
                                        <MudTh>ID</MudTh>
                                        <MudTh>Pris</MudTh>
                                        <MudTh>Kommentar</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        @if (context.OrderId == content.OrderId)
                                            {
                                                for (int i = 0; i < content.GiftBaskets.Count; i++)
                                                {
                                                <MudTd DataLabel="ID">@content.GiftBaskets[i].GiftBasketId</MudTd>
                                                <MudTd DataLabel="Pris">@content.GiftBaskets[i].Price</MudTd>
                                                <MudTd DataLabel="Kommentar">@content.GiftBaskets[i].Comment</MudTd>}
                                            }
                                    </RowTemplate>
                                </MudTable>
                            </MudCardContent>
                        </MudCard>
                    </td>
                </MudTr>}
            <br />
        </ChildRowContent>
    </MudTable>}
    </Authorized>
    <NotAuthorized>
        <LoginDisplay />
    </NotAuthorized>
</AuthorizeView>
@code
{
    private List<Order> oldOrders;
    private string searchString = "";
    private bool FilterFunc1(Order element) => FilterFunc(element, searchString);

    protected override async Task OnInitializedAsync()
    {
        using (var ctx = DbContextFactory.CreateDbContext())
        {
            oldOrders = await ctx.Orders
                                 .Where(o => o.Status >= OrderStatus.Delivered)
                                 .OrderBy(t => t.DateOrdered)
                                 .ToListAsync();
            // ctx.Orders.Where(t => t.Status == OrderStatus.Delivered).OrderBy(t=>t.DateOrdered).ToListAsync();
        }
    }

    private void ShowBtnPress(int nr)
    {
        Order tmpPerson = oldOrders.First(f => f.OrderId == nr);
        tmpPerson.ShowDetails = !tmpPerson.ShowDetails;
    }

    // Desides what can be search for
    private bool FilterFunc(Order element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.OrderId} {element.PhoneNumber} {element.Price}".Contains(searchString))
            return true;
        return false;
    }
}
