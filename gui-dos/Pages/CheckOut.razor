@page "/checkout"
@using gui_dos.Forms
@using gui_dos.Models
@using gui_dos.Data
@using Microsoft.EntityFrameworkCore

@inject NavigationManager NavMan
@inject Data.ShoppingCart ShoppingCart
@inject IDbContextFactory<IsvaerftetDbContext> DbContextFactory

<EditForm Model="@orderForm" OnValidSubmit="OrderOrder">
    <DataAnnotationsValidator />
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudGrid Spacing="6" Class="my-4">
            <MudItem xs="7">
                <MudText Typo="Typo.h5" GutterBottom="true">Bestilling</MudText>
                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField T="string" Label="Email" @bind-Value="orderForm.Email" For="@(() => orderForm.Email)" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField T="string" Label="Telefon nummer" @bind-Value="orderForm.PhoneNumber" For="@(() => orderForm.PhoneNumber)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField T="string" Label="Fornavn" @bind-Value="orderForm.FirstName" For="@(() => orderForm.FirstName)" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField T="string" Label="Efternavn" @bind-Value="orderForm.LastName" For="@(() => orderForm.LastName)" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudDatePicker Label="Ønsket afhentnings dato" @bind-Date=orderForm.Date  DisableToolbar="true" HelperText="Dobbelt tjek at denne er rigitg" MinDate="@DateTime.Now" MaxDate="@DateTime.Now.AddMonths(2)" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField T="string" Label="Kommentar: Ønsker til hele ordren" @bind-Value="orderForm.Comment" Variant="Variant.Outlined" Lines="10" 
                        Counter="500" MaxLength="500" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))"/>
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox @bind-Checked="DoNotErase" Color="Color.Info" @onclick="TOS">
                            Vilkår og betingelser
                        </MudCheckBox>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Class="text-center" Style=@($"color:{Colors.Grey.Default}")>Betaling foregår i butikken, ved afhentning.</MudText>
                    </MudItem>
                    <MudItem xs="6" Class="d-flex justify-center">
                        <MudButton Class="mt-8 border border-dark" ButtonType="ButtonType.Button" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Link="/shop">
                            Tilbage
                        </MudButton>
                    </MudItem>
                    <MudItem xs="6" Class="d-flex justify-center">
                        <MudButton Class="mt-8 border border-dark" Disabled="@IsTOSAccepted" ButtonType="ButtonType.Submit" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large">Bestil ordre</MudButton>
                    </MudItem>
                </MudGrid>
            </MudItem>

            @* Cart *@
            <MudItem xs="5">
                <MudPaper Class="d-flex flex-column p-2" Style="height:80%;" Outlined="true">
                    <CartComp/>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
</EditForm>

@code
{
    [Inject] private IDialogService DialogService { get; set; }
    private OrderForm orderForm = new OrderForm();

    public bool DoNotErase = false;
    public bool IsTOSAccepted = true;

    private void TOS()
    {
        IsTOSAccepted = !IsTOSAccepted;
    }

    private async Task OrderOrder()
    {
        bool? result = await DialogService.ShowMessageBox(
            "Bekræft bestilling",
            "Er du sikker på du vil bestille din ordre?",
            yesText:"Ja", noText:"Nej");

        if(result == true) {
            using (var ctx = DbContextFactory.CreateDbContext())
            {
                if (ShoppingCart.GiftBaskets.Count == 0)
                {
                    NavMan.NavigateTo("/shop");
                    return;
                }
                Order order = new Order(ShoppingCart.GiftBaskets);
                order.FillInformation(orderForm);

                Change c = new Change(DateTime.Now.ToString(), "Ordre oprettet", "Kunde");
                order.Changelog.Add(c);

                ctx.Orders.Add(order);
                await ctx.SaveChangesAsync();

                order.SendStatusMail();

                ShoppingCart.GiftBaskets.Clear();
            }
            NavMan.NavigateTo("/shop");
        }
    }

    private IEnumerable<string> MaxCharacters(string ch)
    {
        if (!string.IsNullOrEmpty(ch) && 500 < ch?.Length)
            yield return "Max 500 karakterer";
    }
}
