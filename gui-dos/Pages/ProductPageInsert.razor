@page "/product/insert"

@using System
@using System.IO
@using System.Collections.Generic
@using gui_dos.Models
@using gui_dos.Forms
@using gui_dos.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms

@inject IDbContextFactory<IsvaerftetDbContext> DbContextFactory
@inject NavigationManager NavMan

<AuthorizeView Context="AuthContext">
    <Authorized>
        <div class="d-flex justify-center text-center m-5">
            <MudPaper class="p-2">
                <MudText Typo="Typo.h5" Align="Align.Center">
                    Opret nyt produkt
                </MudText>
                <EditForm Model="@productForm" OnValidSubmit="InsertProduct" Context="EditContext" style="width: 100%;">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>

                    <MudTextField @bind-Value=productForm.Title Class="mud-theme-tertiary rounded m-2" Label="Titel" Variant="Variant.Filled"/>
                    <MudTextField @bind-Value=productForm.Description Class="mud-theme-tertiary rounded m-2" Label="Beskrivelse" Variant="Variant.Filled" Lines="3"/>
                    <MudNumericField @bind-Value=productForm.Price Class="mud-theme-tertiary rounded m-2" Label="Pris" Variant="Variant.Filled" Adornment="Adornment.End" AdornmentText="kr." Min="0"/>
                    <MudTextField @bind-Value=productForm.Tags Class="mud-theme-tertiary rounded m-2" Label="Tags (mellemrum separeret)" Variant="Variant.Filled"/>
                    <div class="m-2">
                        <label style="font-weight: bold;">Billede(r): </label>
                        <InputFile OnChange="@fileUpload"/>
                    </div>
                    <div class="d-flex justify-space-between m-2"> 
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.ArrowBack" Class="rounded-pill border border-dark" Link="/product">
                            Tilbage
                        </MudButton>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Outlined.Add" Class="rounded-pill border border-dark">
                            Opret
                        </MudButton>
                    </div>
                </EditForm>
            </MudPaper>
        </div>
    </Authorized>
    <NotAuthorized>
        <LoginDisplay />
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private long maxImageFileSize = 4096000;
    private ProductForm productForm = new ProductForm() {Tags = ""};

    private async Task fileUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream(maxImageFileSize).ReadAsync(buffer);
        productForm.Image = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task InsertProduct()
    {
        string name = (await authenticationStateTask).User.Identity.Name;
        using (var ctx = DbContextFactory.CreateDbContext())
        {
            Product p = new Product( productForm.Title
                                   , productForm.Description
                                   , productForm.Price
                                   , productForm.Image
                                   , productForm.Tags );

            Change c = new Change(DateTime.Now.ToString(), "Produkt oprettet", name);

            p.Changelog.Add(c);
            ctx.Products.Add(p);
            await ctx.SaveChangesAsync();
        }
        NavMan.NavigateTo("/product");
    }
}
